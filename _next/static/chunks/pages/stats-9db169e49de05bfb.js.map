{"version":3,"file":"static/chunks/pages/stats-9db169e49de05bfb.js","mappings":"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","sources":["webpack://_N_E/?558b","webpack://_N_E/./src/components/StatTile.tsx","webpack://_N_E/./src/lib/matomo.ts","webpack://_N_E/./src/pages/stats.tsx","webpack://_N_E/./node_modules/next/script.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/stats\",\n      function () {\n        return require(\"private-next-pages/stats.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/stats\"])\n      });\n    }\n  ","import { fr } from \"@codegouvfr/react-dsfr\";\n\nexport type StatTileProps = {\n  title: string;\n  stats: string | number;\n  description?: string | React.ReactNode;\n};\n\nexport const StatTile = (props: StatTileProps): JSX.Element => {\n  return (\n    <div className={fr.cx(\"fr-col-12\", \"fr-col-md-4\")}>\n      <div className={fr.cx(\"fr-card\", \"fr-card--no-arrow\")}>\n        <div className={fr.cx(\"fr-card__body\")}>\n          <strong\n            className={fr.cx(\"fr-display--md\", \"fr-mt-5w\")}\n            style={{ textAlign: \"center\" }}\n          >\n            {props.stats}\n          </strong>\n          <h2 className={fr.cx(\"fr-card__title\", \"fr-mb-4w\")}>{props.title}</h2>\n          {props.description && (\n            <div className={fr.cx(\"fr-card__desc\")}>\n              <p>{props.description}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export type MatomoResult = {\n  nbPageViews: number;\n  nbUniqPageViews: number;\n  nbVisits: number;\n};\n\nexport const fetchMatomoData = async (): Promise<MatomoResult> => {\n  const MATOMO_URL = [\n    `${process.env.NEXT_PUBLIC_MATOMO_URL}/?module=API&method=VisitsSummary.getVisits&idSite=${process.env.NEXT_PUBLIC_MATOMO_SITE_ID}&format=JSON&period=year&date=today`,\n    `${process.env.NEXT_PUBLIC_MATOMO_URL}/?module=API&method=Actions.get&idSite=${process.env.NEXT_PUBLIC_MATOMO_SITE_ID}&format=JSON&period=year&date=today`,\n  ];\n  const promises = MATOMO_URL.map((url) =>\n    fetch(url)\n      .then((data) => data.json())\n      .catch(() => {\n        return null;\n      })\n  );\n  const [nbVisitData, infoData] = await Promise.all(promises);\n  return {\n    nbPageViews: infoData?.nb_pageviews ?? 0,\n    nbUniqPageViews: infoData?.nb_uniq_pageviews ?? 0,\n    nbVisits: nbVisitData?.value ?? 0,\n  };\n};\n","import React, { useEffect } from \"react\";\nimport type { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport Script from \"next/script\";\nimport { StatTile } from \"../components/StatTile\";\n\nimport { fetchMatomoData, MatomoResult } from \"../lib\";\n\nimport { ScatterChart, PieChart } from \"../components/DsFrChart\";\n\nconst Stats: NextPage = () => {\n  // fetch stats from public matomo\n  const [matomoData, setMatomoData] = React.useState<MatomoResult>({\n    nbPageViews: 0,\n    nbVisits: 0,\n    nbUniqPageViews: 0,\n  });\n\n  useEffect(() => {\n    (async () => {\n      const data = await fetchMatomoData();\n      setMatomoData(data);\n    })();\n  }, []);\n\n  const basePath = process.env.NEXT_PUBLIC_BASE_PATH;\n  return (\n    <>\n      <Script src={`${basePath}/Charts/dsfr-chart.umd.js`} />\n      <Head>\n        <title>Statistiques d&apos;utilisation | template</title>\n        <link rel=\"stylesheet\" href={`${basePath}/Charts/dsfr-chart.css`} />\n      </Head>\n      <div className=\"fr-container fr-my-10w\">\n        <h1>Usage web</h1>\n        <div className=\"fr-grid-row fr-grid-row--gutters fr-grid-row--center\">\n          <StatTile\n            title=\"Nombre de visites\"\n            stats={matomoData.nbVisits}\n            description=\"C'est le nombre de visites total du site sur les 12 derniers mois\"\n          />\n          <StatTile\n            title=\"Nombre de pages vues (total)\"\n            stats={matomoData.nbPageViews}\n            description=\"C'est le nombre de pages vues au total sur le site sur les 12 derniers mois\"\n          />\n          <StatTile\n            title=\"Nombre de pages vues (uniques)\"\n            stats={matomoData.nbUniqPageViews}\n            description=\"C'est le nombre de pages vues uniques sur le site sur les 12 derniers mois\"\n          />\n        </div>\n        {/* <br />\n        <br />\n        <h1>Statistiques d&apos;impact</h1>\n        <ScatterChart\n          x={JSON.stringify([\n            [1, 5, 8],\n            [1, 2, 15],\n          ])}\n          y={JSON.stringify([\n            [30, 10, 20],\n            [10, 20, 30],\n          ])}\n        ></ScatterChart>\n        <br />\n        <br />\n        <PieChart\n          x={JSON.stringify([1, 2, 3])}\n          y={JSON.stringify([10, 20, 30])}\n        ></PieChart>\n        <br />\n        <br /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Stats;\n","module.exports = require('./dist/client/script')\n"],"names":["window","__NEXT_P","push","__webpack_require__","StatTile","jsx_runtime","jsx","div","className","fr","cx","jsxs","strong","style","textAlign","props","stats","h2","title","description","p","fetchMatomoData","infoData","nbVisitData","promises","MATOMO_URL","process","concat","map","fetch","url","then","data","json","catch","Promise","all","nbPageViews","nb_pageviews","nbUniqPageViews","nb_uniq_pageviews","nbVisits","value","matomoData","setMatomoData","React","useEffect","basePath","Fragment","Script","src","Head","link","rel","href","h1","module","exports"],"sourceRoot":""}